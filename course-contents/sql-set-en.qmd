# SQL SET Operations

- UNION [ALL]
- EXCEPT/MINUS
- INTERSECT


![set-operations-union-intersect-except](../course-contents/images/set-operations-union-intersect-except.png)

Above image is take from [following link](https://medium.com/@sounder.rahul/interesting-read-sql-set-operators-union-union-all-intersect-minus-except-f325f378882f)




## UNION

- Combines different (DISTINCT) results from multiple SELECT commands.
- UNION singles duplicate records in the query result, so performance is affected.
- UNION ALL works faster because it does not deal with duplicate records.
- UNION ALL should be used wherever possible for performance reasons.
- Column aliases should be written in the first query.
- Column numbers must be the same in all queries that are concatenated.
- Column data structures should be either implicitly translated or explicitly translated (Explicit Conversion).
- For example SELECT cast( GETDATE() as varchar(12))


UNION Example

``` sql
SELECT countryregion, city FROM HR.Employees
UNION
SELECT countryregion, city FROM Sales.Customers;
```

