## SQL- UNION - Birleşim

- Birden fazla SELECT komutundan gelen farklı (DISTINCT) sonuçları birleştirir.

- UNION sorgu sonucundaki mükerrer kayıtları tekilleştirdiği için performans etkilenir.


Aşağıdaki örneğe bakınız:


```sql
SELECT c.FirstName FROM Customer c
```
59 satır


Müşteri (Customer) tablomuzda 59 satır var.

```sql
SELECT e.FirstName FROM Employee e
```

8 satır


Çalışanlar (Employees) tablomuzda 8 satır bulunmaktadır.


```sql
SELECT c.FirstName FROM Customer c
UNION
SELECT e.FirstName FROM Employee e
```

63 satır

Ancak tüm ilk adları **UNION** kullanarak birleştirdiğimizde 59+8 = 67 satır değil 63 satır elde ederiz.
UNION set operatörü sonuçtan yinelenenleri kaldırır.
Burada 4 yinelenen ilk ad var..



- UNION ALL mükerrer kayıtlar ile ilgili işlem yapmadığı için daha hızlı çalışır.


- Performans açısından mümkün olan her yerde UNION ALL kullanılmalıdır.


```sql
SELECT c.FirstName FROM Customer c
UNION ALL
SELECT e.FirstName FROM Employee e
```

67 satır

**UNION ALL** kullandığımızda 59+8 = 67 satır elde ederiz.
Sonuç kümesini bir alt sorgu kullanarak sıralarsak, yinelenenleri daha net görebiliriz.
Aşağıdaki sorguda, alt sorgudan kullanıyoruz.


```sql
SELECT * FROM
(
SELECT c.FirstName FROM Customer c
UNION ALL
SELECT e.FirstName FROM Employee e
)
ORDER BY FirstName
```

![union all duplicate results](./images/union-all-duplicate-results.png)


- Kolon takma isimleri ilk sorguda yazılmalıdır.
- Kolon sayıları birleştirilen tüm sorgularda aynı olmalıdır.

Eğer aşağıdaki sorguyu çalıştırırsak, hata alırız.

```sql
SELECT c.FirstName,c.LastName FROM Customer c
UNION ALL
SELECT e.FirstName FROM Employee e
```

```
SQL Error [1]: [SQLITE_ERROR] SQL error or missing database (SELECTs to the left and right of UNION ALL do not have the same number of result columns)
```


- Kolon veri yapıları ya örtük çevirime (Implicit Conversion) uygun olmalıdır, yada açıkça çevirilmelidir (Explicit Conversion).
- Örneğin SELECT cast( GETDATE() as varchar(12))

Bu, dinamik veri türlerini kullanması nedeniyle sqlite'da daha az bir sorundur.

Ancak oracle ve sqlserver'da, veriler örtük olarak dönüştürülemezse sorgularınız hata döndürebilir.


